#/bin/bash

#--------------------------------------------
# 功能：编译xcode项目并打ipa包
# 使用说明：
#        编译project
#            ipa-build <project directory> [-c <project configuration>] [-o <ipa output directory>] [-t <target name>]
#        编译workspace
#            ipa-build  <workspace directory> -w -s <schemeName> [-c <project configuration>] [-n]
#
# 参数说明：	 -c NAME                工程的configuration,默认为Release。
#            -o PATH                生成的ipa文件输出的文件夹（必须为已存在的文件路径）默认为工程根路径下的”build/ipa-build“文件夹中
#            -t NAME                需要编译的target的名称
#            -w                    	编译workspace    
#            -s NAME                对应workspace下需要编译的scheme
#          	 -l                  	渠道包后缀
#          	 -e                  	最后发送email
# 作者：ccf
# E-mail:ccf.developer@gmail.com
# 创建日期：2012/09/24
#--------------------------------------------
# 修改日期：2013/02/18
# 修改人：ccf
# 修改内容：打包方式改为使用xcrun命令，并修改第二个参数
#--------------------------------------------
# 修改日期：2013/04/25
# 修改人：ccf
# 修改内容：采用getopts来处理命令参数，并增加编译前清除选项
#--------------------------------------------
# 修改日期：2013/04/26
# 修改人：ccf
# 修改内容：增加编译workspace的功能
#--------------------------------------------
# 修改日期：2014/01/23
# 修改人：Jey
# 修改内容：增加l, e参数, 修改build命令绝对路径
#--------------------------------------------
# 修改日期：2014/04/14
# 修改人：Jey
# 修改内容：增加m参数, 修改email title
#--------------------------------------------


if [ $# -lt 1 ];then
    echo "Warning! Should enter the root directory of xcode project after the ipa-build command."
    exit 2
fi

if [ ! -d $1 ];then
    echo "Error! The first param must be a directory."
    exit 2
fi

#工程绝对路径
script_path=$(pwd)
cd $1
project_path=$(pwd)

#编译的configuration，默认为Release
build_config=Release
#邮件标题
subject_title=""

param_pattern=":nc:o:t:ws:l:e:m:"
OPTIND=2
while getopts $param_pattern optname
  do
    case "$optname" in
    "c")        
        tmp_optind=$OPTIND
        tmp_optname=$optname
        tmp_optarg=$OPTARG
        OPTIND=$OPTIND-1
        if getopts $param_pattern optname ;then
            echo  "Error argument value for option $tmp_optname"
            exit 2
        fi
        OPTIND=$tmp_optind

        build_config=$tmp_optarg
        
    ;;
    "m")    
        tmp_optind=$OPTIND
        tmp_optname=$optname
        tmp_optarg=$OPTARG
        OPTIND=$OPTIND-1
        if getopts $param_pattern optname ;then
            echo  "Error argument value for option $tmp_optname"
            exit 2
        fi
        OPTIND=$tmp_optind
        subject_title=$tmp_optarg
        
    ;;
    "e")
        tmp_optind=$OPTIND
        tmp_optname=$optname
        tmp_optarg=$OPTARG
        OPTIND=$OPTIND-1
        if getopts $param_pattern optname ;then
            echo  "Error argument value for option $tmp_optname"
            exit 2
        fi
        OPTIND=$tmp_optind

        send_email=$tmp_optarg
        
    ;;
    "o")
        tmp_optind=$OPTIND
        tmp_optname=$optname
        tmp_optarg=$OPTARG

        OPTIND=$OPTIND-1
        if getopts $param_pattern optname ;then
            echo  "Error argument value for option $tmp_optname"
            exit 2
        fi
        OPTIND=$tmp_optind

        cd $tmp_optarg
        output_path=$(pwd)
        if [ ! -d $output_path ];then
            echo "Error!The value of option o must be an exist directory."
            exit 2
        fi

    ;;
    "w")
        workspace_name='*.xcworkspace'
        ls $project_path/$workspace_name &>/dev/null
        rtnValue=$?
        if [ $rtnValue = 0 ];then
            build_workspace=$(echo $(basename $project_path/$workspace_name))
        else
            echo  "Error!Current path is not a xcode workspace.Please check, or do not use -w option."
            exit 2
        fi
        
    ;;
    "l")
        tmp_optind=$OPTIND
        tmp_optname=$optname
        tmp_optarg=$OPTARG
        OPTIND=$OPTIND-1
        if getopts $param_pattern optname ;then
            echo  "Error argument value for option $tmp_optname"
            exit 2
        fi
        OPTIND=$tmp_optind

        channel_packages=$tmp_optarg
        
    ;;
    "s")
        tmp_optind=$OPTIND
        tmp_optname=$optname
        tmp_optarg=$OPTARG

        OPTIND=$OPTIND-1
        if getopts $param_pattern optname ;then
            echo  "Error argument value for option $tmp_optname"
            exit 2
        fi
        OPTIND=$tmp_optind

        build_scheme=$tmp_optarg
        
    ;;
    "t")
        tmp_optind=$OPTIND
        tmp_optname=$optname
        tmp_optarg=$OPTARG

        OPTIND=$OPTIND-1
        if getopts $param_pattern optname ;then
            echo  "Error argument value for option $tmp_optname"
            exit 2
        fi
        OPTIND=$tmp_optind

        build_target=$tmp_optarg
                
    ;;

    "?")
        echo "Error! Unknown option $OPTARG"
        exit 2
    ;;
    ":")
        echo "Error! No argument value for option $OPTARG"
        exit 2
    ;;
    
    *)
      # Should not occur
        echo "Error! Unknown error while processing options"
        exit 2
    ;;
    esac
  done

echo "-------------------------------------------"
echo "${subject_title}"

#build文件夹路径
build_path=${project_path}/build
#生成的app文件目录
appdirname=Release-iphoneos
if [ $build_config = Debug ];then
    appdirname=Debug-iphoneos
fi
if [ $build_config = Distribution ];then
    appdirname=Distribution-iphoneos
fi
if [ $build_config = Inhouse ];then
    appdirname=Inhouse-iphoneos
fi
#编译后文件路径(仅当编译workspace时才会用到)
compiled_path=${build_path}/${appdirname}


#组合编译命令
#/Xcode111.app/Contents/Developer/usr/bin
#build_cmd='xcodebuild'
build_cmd='xcodebuild'
clean_cmd=${build_cmd}' clean -configuration '${build_config}

if [ "$build_workspace" != "" ];then
    #编译workspace
    if [ "$build_scheme" = "" ];then
        echo "Error! Must provide a scheme by -s option together when using -w option to compile a workspace."
        exit 2
    fi
    clean_cmd=${clean_cmd}' -workspace '${build_workspace}' -scheme '${build_scheme}
    build_cmd=${build_cmd}' -workspace '${build_workspace}' -scheme '${build_scheme}' -configuration '${build_config}' CONFIGURATION_BUILD_DIR='${compiled_path}' ONLY_ACTIVE_ARCH=NO'

else
    #编译project
    build_cmd=${build_cmd}' -configuration '${build_config}
    if [ "$build_target" != "" ];then
        build_cmd=${build_cmd}' -target '${build_target}
    fi    
fi


#编译工程
cd $project_path
$clean_cmd || exit
$build_cmd || exit

#进入build路径
cd $build_path

#创建ipa-build文件夹
if [ -d ./ipa-build ];then
    rm -rf ipa-build
fi
mkdir ipa-build



#app文件名称
appname=$(basename ./${appdirname}/*.app)
#通过app文件名获得工程target名字
target_name=$(echo $appname | awk -F. '{print $1}')
#app文件中Info.plist文件路径
app_infoplist_path=${build_path}/${appdirname}/${appname}/Info.plist
#取版本号
bundleShortVersion=$(/usr/libexec/PlistBuddy -c "print CFBundleShortVersionString" ${app_infoplist_path})
#取build值
bundleVersion=$(/usr/libexec/PlistBuddy -c "print CFBundleVersion" ${app_infoplist_path})
#显示名字
app_disname=$(/usr/libexec/PlistBuddy -c "print CFBundleName" ${app_infoplist_path})

#IPA名称
if [ "$channel_packages" != "" ];then
    ipa_name="${target_name}_${bundleShortVersion}_${build_config}_${bundleVersion}_${channel_packages}"
else
    ipa_name="${target_name}_${bundleShortVersion}_${build_config}_${bundleVersion}"
fi
ipa_name_complate="${ipa_name}_$(date +"%H%M%S")"
echo $ipa_name_complate

#xcrun打包
xcrun -sdk iphoneos PackageApplication -v ./${appdirname}/*.app -o ${build_path}/ipa-build/${ipa_name_complate}.ipa || exit
cp -R ./${appdirname}/*.dSYM ${build_path}/ipa-build/${ipa_name_complate}.app.dSYM

#################################################################
#使用我自己打包的路径
#################################################################
if [ "$output_path" == "" ];then
    output_path="${project_path}/../build"
fi
#################################################################
if [ "$output_path" != "" ];then
    echo "----------------------------------"
    relative_path=${app_disname}/${build_config}/$(date +"%Y%m%d")
    if [ ! -d ${output_path}/${relative_path} ];then
        mkdir -p ${output_path}/${relative_path}
    fi
    echo ${build_path}/ipa-build/${ipa_name_complate}.ipa
    cp ${build_path}/ipa-build/${ipa_name_complate}.ipa "${output_path}/${relative_path}/${ipa_name_complate}.ipa"
    mv ${build_path}/ipa-build/${ipa_name_complate}.app.dSYM "${output_path}/${relative_path}/${ipa_name_complate}.ipa.DSYM"
    echo "Copy ipa file successfully to the path ${output_path}/${relative_path}/${ipa_name_complate}.ipa"
fi
